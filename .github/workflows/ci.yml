name: 3DPhysicsEngine CI

on: [push, pull_request]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [clang]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get install -y cmake ninja-build gcc g++ gcovr
          else
            sudo apt-get install -y cmake ninja-build clang llvm-14 llvm-14-tools
            sudo ln -sf /usr/bin/llvm-cov-14 /usr/local/bin/llvm-cov
            sudo ln -sf /usr/bin/llvm-profdata-14 /usr/local/bin/llvm-profdata
            export PATH=/usr/local/bin:$PATH
          fi

      - name: Check llvm tools
        run: |
          which llvm-cov
          llvm-cov --version
          which llvm-profdata
          llvm-profdata help || true

      - name: Inspect CMake logs
        run: |
          grep -i "coverage" build/CMakeCache.txt || true
          grep -i "llvm" build/CMakeCache.txt || true

      - name: Set environment variables
        run: |
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            echo "CC=gcc" >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          else
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi

      - name: Configure project
        run: |
          cmake -S . -B build \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DTESTS=ON \
            -DCOVERAGE=ON \
            -DLLVM_COV_PATH=/usr/bin/llvm-cov-14 \
            -DLLVM_PROFDATA_PATH=/usr/bin/llvm-profdata-14

      - name: Build
        run: cmake --build build -- -j$(nproc)

      - name: Run tests
        run: ctest --test-dir build --output-on-failure -j$(nproc)

      - name: Generate coverage report
        run: cmake --build build --target coverage-console

      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.compiler }}
          path: build/coverage/
          if-no-files-found: ignore
